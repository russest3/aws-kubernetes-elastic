---
- name: 'Create ssh keys'
  ansible.builtin.user:
    name: "{{ svc_acct_name }}"
    generate_ssh_key: true

- name: 'If this is the control plane node get the current public key for later use'
  ansible.builtin.fetch:
    src: "/home/{{ svc_acct_name }}/.ssh/id_rsa.pub"
    dest: './id_rsa.pub'
    flat: true
  when: "ansible_hostname | regex_search('^test-c1-cp.*$')"

- name: 'If a worker node add the control plane node to authorized keys'
  ansible.builtin.copy:
    dest: "/home/{{ svc_acct_name }}/.ssh/authorized_keys"
    content: "{{ lookup('file', './id_rsa.pub') }}"
    owner: "{{ svc_acct_name }}"
    group: "{{ svc_acct_name }}"
    mode: 0600
  when: "ansible_hostname | regex_search('^test-c1-node.*$')"

- name: 'Add k8s io apt repository gpg key this will likely change for each version of kubernetes release'
  ansible.builtin.shell:
    cmd: |
      set -o pipefail
      sudo curl -fsSL https://pkgs.k8s.io/core:/stable:/v{{ kubernetes_version_short }}/deb/Release.key | sudo gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg
    executable: /bin/bash
  args:
    creates: '/etc/apt/keyrings/kubernetes-apt-keyring.gpg'
  changed_when: false

- name: 'Add the Kubernetes apt repository'
  ansible.builtin.shell: 
    cmd: |
      set -o pipefail
      echo 'deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v{{ kubernetes_version_short }}/deb/ /' | tee /etc/apt/sources.list.d/kubernetes.list
    executable: /bin/bash
  args:
    creates: '/etc/apt/sources.list.d/kubernetes.list'
  changed_when: false

- name: 'Update the apt cache'
  ansible.builtin.apt:
    update_cache: true

- name: 'Install kubelet kubeadm and kubectl'
  ansible.builtin.apt:
    name:
      - kubelet
      - kubeadm
      - kubectl
    state: present

- name: 'Mark packages hold so they are not updated'
  ansible.builtin.shell:
    cmd: |
      set -o pipefail
      apt-mark hold kubelet kubeadm kubectl containerd
    executable: /bin/bash
  changed_when: false
...
