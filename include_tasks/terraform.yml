- name: 'Run terraform init'
  ansible.builtin.shell: "terraform -chdir={{ automation_type }}/ init"
  changed_when: false
  register: _init_results
  failed_when: "_init_results.rc > 0"

- name: 'Run terraform validate'
  ansible.builtin.shell: "terraform -chdir={{ automation_type }}/ validate"
  changed_when: false
  register: _validate_results
  failed_when: "_validate_results.rc > 0"

- name: 'Run terraform plan'
  ansible.builtin.shell: "terraform -chdir={{ automation_type }}/ plan -out=tfplan.out -var=admin_pw='{{ admin_pw }}' -var=admin_name='{{ admin_name }}'"
  changed_when: false
  register: _plan_results
  failed_when: "_plan_results.rc > 0"
  when: automation_type == 'azure'

- name: 'Run terraform plan'
  ansible.builtin.shell: "terraform -chdir={{ automation_type }}/ plan -out=tfplan.out"
  changed_when: false
  register: _plan_results
  failed_when: "_plan_results.rc > 0"
  when: automation_type == 'aws'

- name: 'Plan results:'
  ansible.builtin.debug:
    var: _plan_results.stdout

- name: 'Run terraform apply'
  ansible.builtin.shell: "terraform -chdir={{ automation_type }}/ apply -auto-approve 'tfplan.out'"
  changed_when: false
  register: _apply_results
  failed_when: "_apply_results.rc > 0"

- name: 'Apply results:'
  ansible.builtin.debug:
    var: _plan_results.stdout